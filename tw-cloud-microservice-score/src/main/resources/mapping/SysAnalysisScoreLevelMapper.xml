<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.springcloud.microservice.score.dao.SysAnalysisScoreLevelMapper">

    <sql id="table">t_e_sys_analysis_score_level</sql>

    <select id="getListByExam"
            resultType="com.tianwen.springcloud.microservice.score.entity.SysAnalysisScoreLevel">
        SELECT level, lowscore, highscore
        FROM <include refid="table" />
        <where>
            AND examid=#{filter.examId}
            <include refid="BaseMapper.filterGrade" />
            <if test="filter.subjectId != null and !filter.subjectId.isEmpty()">
                AND subjectid=#{filter.subjectId}
            </if>
            <include refid="BaseMapper.filterVolume" />
            AND type=#{filter.more.type}
        </where>
        GROUP BY level, lowscore, highscore

        <if test="filter.more.type != 3 and filter.more.type != 4">
            ORDER BY text2numeric(level), text2numeric(lowscore) DESC, text2numeric(highscore) DESC
        </if>
        <if test="filter.more.type == 3">
            ORDER BY text2numeric(lowscore)
        </if>
        <if test="filter.more.type == 4">
            ORDER BY text2numeric(lowscore) DESC
        </if>
    </select>

    <sql id="typeList">
        SELECT examid, gradeid, subjectid, volumeid, type
        FROM <include refid="table" />
        <where>
            AND examid=#{filter.examId}
            AND type != '3'
        </where>
        GROUP BY examid, gradeid, subjectid, volumeid, type
    </sql>
    <select id="getTypeListByExam" resultType="com.tianwen.springcloud.microservice.score.entity.SysAnalysisScoreLevel">
        <include refid="typeList" />
    </select>
    <select id="getTypeCountByExam" parameterType="com.tianwen.springcloud.microservice.score.entity.request.Request"
            resultType="Integer">
        SELECT COUNT(*)
        FROM (
            <include refid="typeList" />
        ) count_list
    </select>
</mapper>
