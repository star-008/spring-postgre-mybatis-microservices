<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.springcloud.microservice.score.dao.analysis.RankZoneStatsMapper">

    <sql id="listData">
        WITH

        stu_sbj_score_data AS  (
        SELECT
        classid,
        1 exam_count,
        CASE WHEN pt.score = '-1' THEN 0 ELSE 1 END applied_exam_count,
        text2score(pt.score) as score
        FROM t_e_cj_stu_subject_score pt
        INNER JOIN t_e_cj_exam exam USING(examid)
        <include refid="BaseMapper.joinExamGrade" />
        <where>
            true
            <include refid="BaseMapper.sqlFragment_searchCriteria" />
            <include refid="BaseMapper.filterSubject" />
        </where>
        ),

        rank_data AS (
            SELECT *,
            RANK() OVER (ORDER BY score DESC) AS stu_rank_in_grade
            FROM stu_sbj_score_data
        ),

        rank_stats AS (
            SELECT classid,

            <foreach collection="filter.zoneList" item="zone">
                sum(CASE WHEN stu_rank_in_grade &lt;= text2numeric(#{zone.lowScore}) THEN 1 ELSE 0 END) count${zone.lowScore},
            </foreach>

            sum(exam_count) stu_exam_count,
            sum(applied_exam_count) stu_applied_exam_count,
            max(score) max_score,
            min(score) min_score,
            avg(score) score,
            sqrt(variance(score)) diff
            FROM  rank_data
            GROUP BY classid
        )
    </sql>

    <sql id="listFilter">
        <where>
            true
            <include refid="BaseMapper.filterClass" />
        </where>
    </sql>

    <select id="selectList" parameterType="com.tianwen.springcloud.microservice.score.entity.request.Request"
            resultType="java.util.Map">
        <include refid="listData" />
        SELECT
        classid class_id,

        <foreach collection="filter.zoneList" item="zone">
            count${zone.lowScore},
        </foreach>

        stu_exam_count AS total_count,
        stu_applied_exam_count apply_count,
        max_score,
        min_score,
        round(score, 2) score,
        round(diff, 2) diff
        FROM rank_stats
        <include refid="listFilter" />
        ORDER BY classid
        <include refid="BaseMapper.sqlFragment_pagination" />
    </select>

    <select id="countList" parameterType="com.tianwen.springcloud.microservice.score.entity.request.Request"
            resultType="Integer">
        <include refid="listData" />
        SELECT COUNT(*) FROM rank_stats
        <include refid="listFilter" />
    </select>

</mapper>
