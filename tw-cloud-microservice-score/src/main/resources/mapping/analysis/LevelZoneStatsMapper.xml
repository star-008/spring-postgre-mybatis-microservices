<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.springcloud.microservice.score.dao.analysis.LevelZoneStatsMapper">

    <sql id="listData">
        WITH

        <include refid="BaseMapper.stu_score_data" />,

        class_score_data AS (
            SELECT
            classid, subjectid,
            sum(exam_count) stu_exam_count,
            sum(applied_exam_count) stu_applied_exam_count,
            max(score) max_score,
            min(score) min_score,

            <foreach collection="filter.zoneList" item="zone">
                sum(
                    CASE WHEN (
                    <if test="zone.highScore != null and zone.highScore != '' and zone.highScore != 0">
                        score &lt; text2numeric(#{zone.highScore}) / 100 * full_score AND
                    </if>
                    score >= text2numeric(#{zone.lowScore}) / 100 * full_score
                    ) THEN 1 ELSE 0 END
                ) count${zone.level},
            </foreach>

            teacherid, teachername
            FROM stu_score_data
            GROUP BY classid, subjectid, teacherid, teachername
        ),

        percent_stats AS (
            SELECT classid, subjectid,
            stu_exam_count,
            stu_applied_exam_count,
            max_score,
            min_score,

            <foreach collection="filter.zoneList" item="zone">
                count${zone.level},
                (CASE WHEN stu_applied_exam_count != 0 THEN count${zone.level}::NUMERIC / stu_applied_exam_count::NUMERIC ELSE 0 END) * 100 percent${zone.level},
            </foreach>

            teacherid, teachername
            FROM class_score_data
        )
    </sql>

    <sql id="listFilter">
        <where>
            true
            <include refid="BaseMapper.filterClass" />
            <include refid="BaseMapper.filterSubject" />
        </where>
    </sql>

    <select id="selectList" parameterType="com.tianwen.springcloud.microservice.score.entity.request.Request"
            resultType="java.util.Map">
        <include refid="listData" />
        SELECT
        classid class_id,
        stu_exam_count total_count,
        stu_applied_exam_count apply_count,
        max_score,
        min_score,
        <foreach collection="filter.zoneList" item="zone">
            count${zone.level},
            round(percent${zone.level}, 2) percent${zone.level},
        </foreach>
        teacherid teacher_id,
        teachername teacher_name

        FROM percent_stats
        <include refid="listFilter" />
        ORDER BY classid
        <include refid="BaseMapper.sqlFragment_pagination" />
    </select>

    <select id="countList" parameterType="com.tianwen.springcloud.microservice.score.entity.request.Request"
            resultType="Integer">
        <include refid="listData" />
        SELECT COUNT(*) FROM percent_stats
        <include refid="listFilter" />
    </select>

</mapper>
