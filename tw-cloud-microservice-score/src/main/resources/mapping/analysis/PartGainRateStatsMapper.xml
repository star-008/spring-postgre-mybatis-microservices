<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.springcloud.microservice.score.dao.analysis.PartGainRateStatsMapper">

    <sql id="listData">
        WITH

        stu_partscore_data AS (
            SELECT exampartscoreid, pt.classid, pt.questiontypeid, pt.smallno, text2score(ept.score) full_score, text2score(pt.score) score
            FROM t_e_cj_stu_part_score pt
            INNER JOIN t_e_cj_exam exam USING(examid)
            INNER JOIN t_e_cj_exam_part_score ept USING(subjectid, examid, gradeid,smallno,questiontypeid)
            <include refid="BaseMapper.joinExamGrade" />
            <where>
                true
                <include refid="BaseMapper.sqlFragment_searchCriteria" />
                <include refid="BaseMapper.filterSubject" />
            </where>
        ),

        class_partscore_data AS (
            SELECT classid, exampartscoreid, smallno, questiontypeid, avg(score) score, avg(full_score) full_score
            FROM stu_partscore_data
            GROUP BY classid, exampartscoreid, smallno, questiontypeid
        ),

        total_partscore_data AS (
            SELECT 'TOTAL' classid, exampartscoreid, smallno, questiontypeid, avg(score) score, avg(full_score) full_score
            FROM class_partscore_data
            GROUP BY exampartscoreid, smallno, questiontypeid
        ),

        all_partscore_data AS (
            SELECT * FROM class_partscore_data
            UNION
            SELECT * FROM total_partscore_data
        ),

        percent_rates AS (
            SELECT *,
            score / full_score * 100 percent
            FROM all_partscore_data
        )

    </sql>

    <sql id="listFilter">
        <where>
            true
            <include refid="BaseMapper.filterClass" />
        </where>
    </sql>

    <select id="selectList" parameterType="com.tianwen.springcloud.microservice.score.entity.request.Request"
            resultType="com.tianwen.springcloud.microservice.score.entity.analysis.PartGainRateStats">
        <include refid="listData" />
        SELECT
        exampartscoreid,
        classid class_id,
        smallno small_no,
        questiontypeid question_type_id,
        round(score, 2) score,
        round(percent, 2) percent,

        (CASE WHEN classid='TOTAL' THEN 1 ELSE 0 END) class_total

        FROM percent_rates
        <include refid="listFilter" />
        ORDER BY class_total, classid, exampartscoreid
        <include refid="BaseMapper.sqlFragment_pagination" />
    </select>

    <select id="countList" parameterType="com.tianwen.springcloud.microservice.score.entity.request.Request"
            resultType="Integer">
        <include refid="listData" />
        SELECT COUNT(*) FROM percent_rates
        <include refid="listFilter" />
    </select>

</mapper>
