<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.springcloud.microservice.base.dao.UserMapper">

    <!-- 分页 -->
    <sql id="sqlFragment_pagination">
        <if test="numPerPage != null">
            limit #{numPerPage}
        </if>
        <if test="start != null">
            offset #{start}
        </if>
    </sql>

    <!-- 查询条件 -->
    <sql id="sqlFragment_searchCriteria">
        <if test="oredCriteria != null and oredCriteria.size != 0">
            <trim prefix="and(" suffix=")">
                <foreach collection="oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>

    <!-- 查询用户信息列表 -->
    <select id="queryUserLoginInfoForList" parameterType="java.util.Map"
            resultType="com.tianwen.springcloud.microservice.base.entity.UserLoginInfo">
        SELECT tt1.*,t5.areaid||','||t4.areaid||','||t3.areaid AS areaid,
        t5.areaname||','||t4.areaname||','||t3.areaname AS areaname,
        t2.orgname,
        (SELECT array_to_string(ARRAY_AGG(distinct(tcur.roleid)), ',') FROM t_con_user_role tcur WHERE tcur.userid = tt1.userid) AS
        roleid,
        (SELECT array_to_string(ARRAY_AGG(trole.rolename), ',') FROM t_e_role trole WHERE trole.roleid
        in (select roleid from t_con_user_role where userid = tt1.userid)) AS rolename
        FROM (
        SELECT
        t1.* FROM t_e_user_logininfo t1
        WHERE t1.status != '9'
        <if test="orgid != null">
            AND t1.orgid = #{orgid}
        </if>
        <if test="orgIdList != null">
            <if test="orgIdList.size() > 0">
                AND t1.orgid IN
                <foreach collection="orgIdList" item="orgid" open="("
                         separator="," close=")">
                    #{orgid}
                </foreach>
            </if>
        </if>
        <if test="userid != null and !userid.isEmpty()">
            AND t1.userid = #{userid}
        </if>
        <if test="userids != null">
            and (1 = 0
            <foreach item="userid" collection="userids">
                <if test="!userid.isEmpty()">
                    or t1.userid = #{userid}
                </if>
            </foreach>)
        </if>
        <if test="realname != null">
            AND t1.realname ILIKE '%'||#{realname}||'%'
        </if>
        <if test="loginname != null">
            AND t1.realname ILIKE '%'||#{loginname}||'%'
        </if>
        <if test="loginemail != null">
            AND t1.loginemail ILIKE '%'||#{loginemail}||'%'
        </if>
        <if test="loginmobile != null">
            AND t1.loginmobile ILIKE '%'||#{loginmobile}||'%'
        </if>
        <if test="idcardno != null">
            AND t1.idcardno ILIKE '%'||#{idcardno}||'%'
        </if>
        <if test="status != null">
            AND t1.status = #{status}
        </if>
        <if test="roleid != null">
            AND EXISTS (SELECT * FROM t_con_user_role b WHERE b.roleid = #{roleId} and b.userid = t1.userid)
        </if>
        ) tt1
        LEFT JOIN t_e_org_edu t2 ON tt1.orgid = t2.orgid
        LEFT JOIN t_jc_sys_area t3 ON t2.areaid = t3.areaid
        LEFT JOIN t_jc_sys_area t4 ON t3.parentareaid = t4.areaid
        LEFT JOIN t_jc_sys_area t5 ON t4.parentareaid = t5.areaid
        where 1 = 1
        <if test="areaid != null">
            <if test="!areaid.isEmpty()">
                AND (t3.areaid = #{areaid} or t4.areaid = #{areaid} or t5.areaid = #{areaid})
            </if>
        </if>
        <include refid="sqlFragment_pagination"/>
    </select>

    <select id="countUserLoginInfo" parameterType="java.util.Map"
            resultType="java.lang.Long">
        SELECT count(*) from (SELECT tt1.*,t5.areaid||','||t4.areaid||','||t3.areaid AS areaid,
        t5.areaname||','||t4.areaname||','||t3.areaname AS areaname,
        (SELECT array_to_string(ARRAY_AGG(tcur.roleid), ',') FROM t_con_user_role tcur WHERE tcur.userid = tt1.userid) AS
        roleid FROM (
        SELECT
        t1.* FROM t_e_user_logininfo t1
        WHERE t1.status != '9'
        <if test="orgid != null">
            AND t1.orgid = #{orgid}
        </if>
        <if test="orgIdList != null">
            <if test="orgIdList.size() > 0">
                AND t1.orgid IN
                <foreach collection="orgIdList" item="orgid" open="("
                         separator="," close=")">
                    #{orgid}
                </foreach>
            </if>
        </if>
        <if test="userid != null and !userid.isEmpty()">
            AND t1.userid = #{userid}
        </if>
        <if test="userids != null">
            and (1 = 0
            <foreach item="userid" collection="userids">
                <if test="!userid.isEmpty()">
                    or t1.userid = #{userid}
                </if>
            </foreach>)
        </if>
        <if test="realname != null">
            AND t1.realname ILIKE '%'||#{realname}||'%'
        </if>
        <if test="loginname != null">
            AND t1.realname ILIKE '%'||#{loginname}||'%'
        </if>
        <if test="loginemail != null">
            AND t1.loginemail ILIKE '%'||#{loginemail}||'%'
        </if>
        <if test="loginmobile != null">
            AND t1.loginmobile ILIKE '%'||#{loginmobile}||'%'
        </if>
        <if test="idcardno != null">
            AND t1.idcardno ILIKE '%'||#{idcardno}||'%'
        </if>
        <if test="status != null">
            AND t1.status = #{status}
        </if>
        <if test="searchkey != null">
            <if test="!searchkey.isEmpty()">
                and t1.realname ILIKE '%'||#{searchkey}||'%'
            </if>
        </if>
        <if test="roleid != null">
            AND EXISTS (SELECT * FROM t_con_user_role b WHERE b.roleid = #{roleId} and b.userid = t1.userid)
        </if>
        ORDER BY t1.createtime DESC
        ) tt1
        LEFT JOIN t_e_org_edu t2 ON tt1.orgid = t2.orgid
        LEFT JOIN t_jc_sys_area t3 ON t2.areaid = t3.areaid
        LEFT JOIN t_jc_sys_area t4 ON t3.parentareaid = t4.areaid
        LEFT JOIN t_jc_sys_area t5 ON t4.parentareaid = t5.areaid
        where 1 = 1
        <if test="areaid != null">
            <if test="!areaid.isEmpty()">
                AND (t3.areaid = #{areaid} or t4.areaid = #{areaid} or t5.areaid = #{areaid})
            </if>
        </if>) totaltbl
    </select>

    <select id="getUserIdsByQueryTree" parameterType="java.util.Map" resultType="String">
        select DISTINCT(userid) from t_e_user_logininfo
        where 1=1
        <if test="realname != null">
            <if test="!realname.isEmpty()">
                and realname ILIKE '%'||#{realname}||'%'
            </if>
        </if>
        <if test="searchkey != null">
            <if test="!searchkey.isEmpty()">
                and realname ILIKE '%'||#{searchkey}||'%'
            </if>
        </if>
        <if test="username != null">
            <if test="!username.isEmpty()">
                AND loginname ILIKE '%'||#{username}||'%'
            </if>
        </if>
        <if test="searchkey != null">
            <if test="!searchkey.isEmpty()">
                AND (realname ILIKE '%'||#{searchkey}||'%' OR loginname ILIKE '%'||#{searchkey}||'%')
            </if>
        </if>
        limit 50
    </select>

    <select id="getLastId" resultType="String">
        SELECT userid FROM t_e_user_logininfo ORDER BY userid DESC OFFSET 0 LIMIT 1
    </select>

    <select id="getUserByLoginName" parameterType="String" resultType="com.tianwen.springcloud.microservice.base.entity.UserLoginInfo">
        select tbl.*, t2.rolename
        from t_e_user_logininfo tbl
        left join t_con_user_role t1 on t1.userid = tbl.userid
        left join t_e_role t2 on t2.roleid = t1.roleid
        where loginname = #{loginname} offset 0 limit 1
    </select>

    <select id="getUserByRealName" parameterType="String" resultType="com.tianwen.springcloud.microservice.base.entity.UserLoginInfo">
        select tbl.*, t2.rolename
        from t_e_user_logininfo tbl
        left join t_con_user_role t1 on t1.userid = tbl.userid
        left join t_e_role t2 on t2.roleid = t1.roleid
        where realname = #{realname} offset 0 limit 1
    </select>

    <select id="getUserByToken" parameterType="String" resultType="com.tianwen.springcloud.microservice.base.entity.UserLoginInfo">
        select tbl.*, t2.rolename, t2.roleid
        from t_e_user_logininfo tbl
        left join t_con_user_role t1 on t1.userid = tbl.userid
        left join t_e_role t2 on t2.roleid = t1.roleid
        where tbl.token = #{token} offset 0 limit 1
    </select>

    <select id="getById" parameterType="String" resultType="com.tianwen.springcloud.microservice.base.entity.UserLoginInfo">
        select tbl.*, t2.rolename, t2.roleid
        from t_e_user_logininfo tbl
        left join t_con_user_role t1 on t1.userid = tbl.userid
        left join t_e_role t2 on t2.roleid = t1.roleid
        where tbl.userid = #{userid} offset 0 limit 1
    </select>

    <select id="getUserByRefreshToken" parameterType="String" resultType="com.tianwen.springcloud.microservice.base.entity.UserLoginInfo">
        select * from t_e_user_logininfo where refreshtoken = #{refreshtoken} offset 0 limit 1
    </select>

    <select id="getByOrg" parameterType="String" resultType="com.tianwen.springcloud.microservice.base.entity.UserLoginInfo">
        select usertbl.* from t_e_user_logininfo usertbl
        where usertbl.orgid = #{orgid}
    </select>

    <select id="getByArea" parameterType="String" resultType="String">
        select usertbl.userid from t_e_user_logininfo usertbl
        left join t_e_org_edu orgtbl on usertbl.orgid = orgtbl.orgid
        where orgtbl.areaid = #{areaid}
    </select>

    <select id="getList" resultType="com.tianwen.springcloud.microservice.base.entity.UserLoginInfo">
        select * from t_e_user_logininfo
    </select>

    <insert id="insertUserRole" parameterType="java.util.Map">
      insert into t_con_user_role values(#{userid}, #{roleid}, #{userid}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    </insert>

    <delete id="deleteUserRole" parameterType="String">
        delete from t_con_user_role where userid = #{userid}
    </delete>

    <select id="getByName" parameterType="java.util.Map" resultType="com.tianwen.springcloud.microservice.base.entity.UserLoginInfo">
        select * from t_e_user_logininfo where realname = #{username} limit 1
    </select>

    <select id="getLoginedUserCount"
            parameterType="java.util.Map"
            resultType="Integer">
        select count(*) from t_e_user_logininfo where currentlogintime >= #{after}
    </select>
</mapper>
